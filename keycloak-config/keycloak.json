[
  {
    "id": "2689c139-bc64-4c03-ad7a-c91d4382a5c9",
    "realm": "carsties-auth",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "6d34a2e3-4384-4a7b-8b0c-663d7c38f40b",
          "name": "default-roles-carsties-auth",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "2689c139-bc64-4c03-ad7a-c91d4382a5c9",
          "attributes": {}
        },
        {
          "id": "7fab5e54-3128-4de7-8a27-ab50aadefe98",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "2689c139-bc64-4c03-ad7a-c91d4382a5c9",
          "attributes": {}
        },
        {
          "id": "31a632b1-c656-4632-a339-1296ebfe45b5",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "2689c139-bc64-4c03-ad7a-c91d4382a5c9",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "3bbb546a-d150-4eaf-9a7d-1793a2630820",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "1bbf6850-afe7-4e53-96ad-d121b79749bf",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "f8251a70-a266-433e-b4f8-7cf7f6f0f101",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "3df5bc1d-2b9f-449e-b5c3-28efa882541b",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "4be6a556-3c03-4846-8262-6eac792f26a6",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "786ab87e-886b-49a3-9067-36ce7ad1ecb3",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "e5afe775-390a-43ca-bfbb-8e8e84b78b35",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "9e0ee18f-e240-4516-8792-10e3045aabc6",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "3a0d7242-28f0-411f-910a-c4faa3ed8d8f",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "b05b6818-e7cd-4c9c-8511-7c04bf91c0d2",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "7b9e4618-4cef-4cf6-8ad4-91d11e831907",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "84139f13-6237-4223-9804-6fd34d21c5b3",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "70dec826-a1e6-4139-ac68-101c9078b739",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "3ccd1dde-550d-4a75-9019-33f286ee020a",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "19474e85-b6f0-4455-82c5-9b5627dbba6d",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-authorization",
                  "manage-identity-providers",
                  "view-realm",
                  "view-identity-providers",
                  "impersonation",
                  "manage-authorization",
                  "manage-events",
                  "query-clients",
                  "query-groups",
                  "view-users",
                  "manage-clients",
                  "view-clients",
                  "manage-realm",
                  "manage-users",
                  "query-users",
                  "query-realms",
                  "create-client",
                  "view-events"
                ]
              }
            },
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "cb7d9f8b-273b-4c4f-98a7-16313369adb5",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "bd403874-3c59-421c-badc-d77a467a4942",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "a7670715-aac8-4743-8f73-2e8f1e980d2a",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          },
          {
            "id": "3e562a5f-d50f-48fe-8577-2c928ae670c5",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "16056833-c809-4acb-a696-dac272353d28",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "nextApp": [],
        "account-console": [],
        "broker": [
          {
            "id": "39367fae-34d2-41e3-abdc-3a9f690f3468",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "939a7d88-8d3c-40da-baa6-a819c0ed9371",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "ac34691b-3e57-4da5-9a14-045f7eefd69b",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "a466f2bb-7625-453f-b732-9e5b99cbb756",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "bff8c08e-1bf1-4e73-8f5d-44c615311268",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "360413f6-c384-4e99-8b36-b86c312b745f",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "267a1434-7add-44e1-a564-729d36c7e9d8",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "5b215081-4ac9-45ad-b982-0ec2940e4c68",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "fc41304a-9044-4467-8372-90dc03e4c818",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          },
          {
            "id": "4f2a0124-570d-4194-a08e-9b6c16d77f3e",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "6d34a2e3-4384-4a7b-8b0c-663d7c38f40b",
      "name": "default-roles-carsties-auth",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "2689c139-bc64-4c03-ad7a-c91d4382a5c9"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "username": "user",
        "firstName": "User",
        "lastName": "Name",
        "email": "user@email.com",
        "emailVerified": true,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "type": "password",
            "value": "Pa$$w0rd",
            "temporary": false
          }
        ],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-carsties-auth"
        ],
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "223eb6e7-67e2-4209-8bde-bfc26ab384f6",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/carsties-auth/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/carsties-auth/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "eaaa067a-a36e-4ed4-810e-db2eb17b2c45",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/carsties-auth/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/carsties-auth/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "4d462ff4-bff4-430a-ac0b-825e4c43959c",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "581f9e3b-6695-4e39-b0b0-c773606f0fc7",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "939a7d88-8d3c-40da-baa6-a819c0ed9371",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "2a82d435-12ec-49b7-bcde-6ef31037afa2",
        "clientId": "nextApp",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "mj1KVXSlCK2eWa9BdwkFfMaIS0Q64CJr",
        "redirectUris": [
          "https://app.carsties.local/*"
        ],
        "webOrigins": [
          "https://app.carsties.local"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1742834638",
          "backchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "16056833-c809-4acb-a696-dac272353d28",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b6cd0391-87a9-493d-ace6-2824b2fb8cc5",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/carsties-auth/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/carsties-auth/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "5f770375-7ac7-4270-bed8-1baa8fff1d59",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "588447be-0445-4aee-9096-7f0e34c76eb2",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "9ecd9565-73de-4102-b591-1bd78cbc4dfe",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "b104389b-88aa-46d1-8d9a-04c59525c1c2",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a184a4b9-db44-4a29-937e-8697f65d0000",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "b222e1d3-46e8-4d01-9afa-55d99f5ac0d7",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "bdf73d90-42fb-439d-9c17-5d8f47fef578",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4533de90-dca1-4719-8ac7-689845b54842",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5ae6bedd-8fe6-4ea5-85c2-63ac713c8658",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "07c12315-9f55-4937-a61a-0a9f52b1fef6",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "035d0e99-5287-4719-8d69-e618763e0677",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "691403a9-5c47-4a56-baec-f6b59f937bd3",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "14e5fb51-9056-4fad-9877-95cd122a5c44",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "620a28fc-65f8-4ba8-acde-c80b696007ba",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4c233e3b-bc95-44b6-80e5-1030eb9d4d10",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fd031adf-8bac-4ce5-8363-a6c32bb7cd3b",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "747488fb-5a4b-469e-925f-c74e165fdec4",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e992e8b5-ac62-4904-b9bb-ca3633b7a701",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "34af6004-5a54-4b05-8dab-9776f526eb4b",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "92b5bab7-a5f8-435f-9983-68a4ff75bc20",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "e10fa1cb-533c-40b3-8a6c-2a6ca966bb96",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "8cb07899-c24d-47cf-a0d9-4a9fa35510a8",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "1760f91c-c7ff-4d33-adb2-4a2b92b56efb",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "612b5f59-5e39-4b08-9dd7-9ace320d0462",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "61e05894-8d3b-4097-88bc-581abc2f5714",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "8255c8bb-61f9-4509-8076-110b1a555f1f",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "ec008b18-5621-44cb-a4c3-6f5bdb252ab2",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "9cd4a991-d161-4bf8-b697-e656fdffba91",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "2100f6ba-e5c7-45b2-8a9c-d5a070aaf7d7",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          },
          {
            "id": "9473391c-a487-424b-9536-442371024546",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "582d070a-8094-4bd1-9ab6-1a8ddec5d07e",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "be655c2f-1d14-4feb-b27a-e952f8ef0467",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "546e1630-695e-413a-96e2-8107ea311cb5",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "8ef4e961-ed0f-4b52-a7f1-9ed211cf28ce",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "dbe4c313-be2c-4316-9013-7075e422c035",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "0f1e67b1-27da-4b12-9507-98914644a9ef",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "7fccfb60-2825-4161-8d03-26abfb1d8252",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "4bcd5dbe-21c5-4fbe-aeb5-1f5eb8af1d7c",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "4921449f-916a-4e1a-8f73-36aecad703ed",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "7dfee847-8878-446e-8fc4-5498aea5cc59",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "5200ca7d-b414-461c-8216-3d24e7855f2d",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "f85cdd44-8d0e-42ef-a95c-161b6494c603",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "33016b61-417d-4ab8-b138-feef01e9c8d4",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "4cf606a5-7d7e-4e3d-bed2-992dbee9554d",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "d9d8b82b-da0c-4f6a-8dd8-a7b892301ca5",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "e013b372-0e6f-49bd-88d9-90a6a73a54bc",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "2a683457-9d67-4377-babd-5b587e7e482e",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ce860184-9462-443e-b0ab-019af91de0e2",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7130b24b-8874-4760-887e-2aa9d40d5394",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "64bd2e58-0a96-493e-83cf-a6c239936ec2",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "539a716e-d794-49e8-8e23-a6f9b2cf731a",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "c2fc6e88-30ff-416b-85a3-7c893dd4a88e",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "b4fc91eb-1209-4c61-b49c-5250498513b4",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "a471345a-19ed-4491-aedb-2a6bfdf0c637",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "12465a08-9ada-4abc-b4be-bab11b36a477",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "56844d3e-da5e-4a26-8600-bd1555cf5570",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "cb734745-4007-407f-b1aa-282c827de943",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "1ffefeb0-fa3e-4c9b-9046-79c4e905faba",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "ffc4fc2c-19ed-47d5-bb72-702111b2c96f"
            ],
            "secret": [
              "5t26BNahkO4HOrGPd6_qhOcH-oAIUgVxyCFP7jfDL7UleESu9wL-DNY_ZXDPpmZNbSmt9l4w6XAOnoWb27PILIc_HoZq8xWo7XXh1KgmC95H3kuQxtzM9jvP4iNcK5enjN2JjD_JCVwn1aD2fpdmRJdta5KsmPCgzgsBUyloTsU"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "2d830549-c87f-40c4-af72-a885dbdb7fa5",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEA2Yh99Hm4axPYN+B0E8hGe53JGfcXuAO600o56y7Ou98rp5kM32LLmbj5H0S45STbEjEFUiXmJ5sdbheav/OAED9iTI/Hv0OPGfayTVABw65/W5HszOtwAEdyZMjMpbvB8uYI+z4+907KZEycRouItxwKH6JOTL+sOTQP0pCM6ccc5N+YBDxksOrMKqm3tmscrXomrf5yu3u2q6nk53jAjsxYyfbOaEikH6hbq21ogYd0XYR35fOQQXWYXvA4vKq+uNoj+WM5JqTf4VzSJ6Z0fEuFvIxki5ZkhOdgvqPrObJCY974iudN8cotyn5NG8PB+6OjrK/HGHMUTuEjJQpx+QIDAQABAoIBADYy9pT41dzh/SOQ6kL6iasnmVE9mhyIW15lFlC1YR94n4ca0FUBJ9LVfkaO6BV5rRaXfail1jYkhPzm5zDvwcbqj/qc8UsDkW5J48t1BXeErOk7DrnQ6F89bfBUAn9BrHVxYKf+rpAOQsmiN+awwd/DnfcbSLCBKi83fEC9sMpXEww6vpNXImVYB23LSqRSiABTEVfL3smJ9oX4EV8PAMK4u9ZbMTjEmEO5r0wfAnkpS3XR/01qdftgP2uw2sObFeaCu8TCgH3KRiOZzi5GCGybfuEmVIwVMUm3aBuM9PXja8BEiDDdFMmYTnMkE8eOVsWVouRyOkIOiBArqfndJW0CgYEA8D9Fp2yhMaOBcjzufeR2u9BNxdZAnoeQOoexV5CGuffAd6lHONmy7Av+gTLgeGUo12aLzsCvmqedZsDDaNXtmsDjb2LTCMUETW2P6EmOHS8dW/9bwJcErDO9finRV0Y9Gj8M2UtKGWqJ0M/vY5Nl5fUTJ+QbSK+rAsjYUtd4vjUCgYEA58vy4CYSWPc6gGSk/+N80lu6Wr0D51zSy5PRvnnbqwMXLKSERdrwXjPLy66PVc15bqGDDiDKCsLDmac7h8mkn8d2TJ7WP9vR/2dbZL3ap0Gkhfg6xOleF0N+Tind/MGNjKTTfplYlK6N6sAoY1f9n6K8rAXk8gt4WzrbASuk7TUCgYArSTsjj077wpnwG0pdJGzAKifZHWFHLuWtpgUt4bxkhV8IMFfExnSWUxLn9GK9TnytUqyd89mv48NYYCLVILZOy7Iuv3+GdPjxemwTTi1s1LBVgwzlBlCxNiFOOfqd3unjcLi/7fDL44YxOUXIiyYw6Jcq+M5xqjUFq2pOgsQegQKBgBOj60tkzm8tW46feH+aFex5Czw/AcKr0cygFMiP6LX/yAnnUrHckDtbJix2+PwrMdvW4ZTj4FqzEAHH8rpZspI7Q2HQn5S/mnaKmmrZz1oWrMsRMmGW6HsOI/iZgY62E7lUCfuTILdQZwP6DjIEtZ++GUB2K2T65dLNFNtviET1AoGAMx4uEjTFGmwyizgPrz2GraYigeYcx2TgBz6Adx8atvVPTIbPQcWaJkvDbt/D5E0CuCZi/mQHjy6R2TfxS+7+1HEV5wKlaiscSrLn0ZsmNuZj8390tFTfFeKR6L77M5m4/2qa/bu2JKGK5lxtHLIZKD5RrGMP7XnK+G6V1Dj7YI4="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICqTCCAZECBgGVyQlW5TANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1jYXJzdGllcy1hdXRoMB4XDTI1MDMyNDE2NDEyN1oXDTM1MDMyNDE2NDMwN1owGDEWMBQGA1UEAwwNY2Fyc3RpZXMtYXV0aDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANmIffR5uGsT2DfgdBPIRnudyRn3F7gDutNKOesuzrvfK6eZDN9iy5m4+R9EuOUk2xIxBVIl5iebHW4Xmr/zgBA/YkyPx79Djxn2sk1QAcOuf1uR7MzrcABHcmTIzKW7wfLmCPs+PvdOymRMnEaLiLccCh+iTky/rDk0D9KQjOnHHOTfmAQ8ZLDqzCqpt7ZrHK16Jq3+crt7tqup5Od4wI7MWMn2zmhIpB+oW6ttaIGHdF2Ed+XzkEF1mF7wOLyqvrjaI/ljOSak3+Fc0iemdHxLhbyMZIuWZITnYL6j6zmyQmPe+IrnTfHKLcp+TRvDwfujo6yvxxhzFE7hIyUKcfkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAvmoJUPHm0XQodf5esP4uRAZNFNhRza4O52UVPLNKUA0soB1Z4Ew4bO8+iWRWrbuR663ZLd0rdyZzCWydEX2um8d2uwbe33YAZQCmtMoJ8xopFwP9bL/oFB48miDQAIS8kIOMjkGHWZZxhaNecmVO5/vwapApYCPoh0dzY7nGoOXc6zm0OuDo+LHtCxEDZWWSLhbO5fNTCoSQwyZzN3uMJjVTn9dNd64GIq0Iyu8OBIRGJG4UYJz0FUCm0bKXst+YrHdZAsTXRa+lb4r3gTJS8DkxxhBq8SBr9lN64uBpw3sDlCR6MEqLG96eRX7mmonm3fM5aDkzqIcP01KuQrJ8PA=="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "0b2a4313-7da0-4eff-9014-57753829c471",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEA05doOYxv1qff5ockwSIVaYv98h+Jnr9syBYFxKFosfneVcExducteaM4D5KwVi2jbGKnuYsI/rd2E/8ZT1wvv1svNPG3fzh2QamDbnmet6wh1/KFeIN9W8r7Dse1T+Smn2yLQvTNsIo8Vvmb3xulsVzRbFK1SgyUP9dmAONaPgALxwcyY9eI3Pqlnt/u1eTL7Lq1SdwcRRFZE1pV9+lfWCczp5NZgyrdKIvInYT/q675GCuOSUAM8F2nrBShfWMsoWrHZXvuD3KweEyePuAhwO0La+sdknWhthvrEl3+I4Nh7atucUK/RLq5pdlsz4UEga83xDP3aeeMDdfLHNYxWwIDAQABAoIBADsVQCkxqdkKr16zxfOYDNqYGKUPYWJOmZWVcK7jU1S/LPJNK/7DttMMXI8cqtiljciqE6Ofyzc1C2eyB+M9HqgUUi46gL6piXv0VZr3ovYuvpSKR/LK5KpJF6mc4mgYtN43dPuRWA4/y3GN6ZR3J+FKxb+1qKGwuYTKJNWCpqRA5P3U3bwAi8oD3Ajfd/5Tak8jQNL84SDD4tk2HPaPIxjpykavmXvoZSEXHcvRnt8O0d51rxb7TxCN7zrplXTkmCfEKAcNduL+ggyEdQ/g/ckndygFmN/C86xE3PB8d9IKFXeqODZzp3qdLZnoM9vPM4AYkqm/Jcohk2StSyGCRuECgYEA8D/qiy863M/mIbQFmd0w5mO3xWlEB2SqF5tT96xN0L0y+rPPSiBREgfFZKunHMQ1+0NJPtTQe4JFkj0JKc/XF+X/l3+VtkN0e+peULMDB5HRmq2ndi4+wcUH5ARkYZsaoF7Zmk7TRddJGP0aWGOrVmD/VZPJA2IP6MjZrfArlI0CgYEA4XaF22aMj0D03w9X4r1XZFo1zUPWMP/kfcY9Adidt1c8BpW7qg5i7YU2itlsCJv2xK6sESqKOwkUOcsjMBM/PQP9WQl3dA4rdZbZTBY3ADC2YQbUO30eCcCALJUW+/WNo198KUpj3Ucax8kQXAuQDSa6s1I++mRKfqSAGmS3B4cCgYEA5nCYOsqhjh0Hovo2iR/lgIbTRVIzw1el4qDFSIIH3ZksZdXElVgsCrxTdL1EvE3jbU9b2R1tn5oTuzI6MNW/fZfJsfnZkwpel2D0+DjMRh1yzAeW4b93yIqBiA9CbXDFeF+iHuVOtuXJomNbOr7XIDJHl0D6hPkxQ1ormTANzR0CgYA9sn9i0Kc6NF5OBBbat1GI5p6+cwfUFNJkELF1Jd/S4g5NBwB5wsITmVaZnHHR0Uwv+lSfxfJZwVxFjG8uorW1brgPe2Wy3oXKAeOozJN0e+AMoR/Gv7BOntz0VkAZ5tJBmMmTSwYU8XZEoaLWbVuYHbcNhz4wqu0vxrg/gLwNVQKBgCnuDqX4Ri/K/B4cp7ToVrBCx3yj1LPuKInoV99RAK/pO5QS54B2cXxyVJQeCDCXkrFy0UD6ok0Vi25sP6gOBUdtMszLIvxpVjBwY+W4GUifmVjEMuqdDgZ7i6gRtYKbivOgS+RDPxMgZ6Bxg9+zP2Wx/2NyY9t2uprsAqOfeP1a"
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICqTCCAZECBgGVyQlWJDANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1jYXJzdGllcy1hdXRoMB4XDTI1MDMyNDE2NDEyN1oXDTM1MDMyNDE2NDMwN1owGDEWMBQGA1UEAwwNY2Fyc3RpZXMtYXV0aDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANOXaDmMb9an3+aHJMEiFWmL/fIfiZ6/bMgWBcShaLH53lXBMXbnLXmjOA+SsFYto2xip7mLCP63dhP/GU9cL79bLzTxt384dkGpg255nresIdfyhXiDfVvK+w7HtU/kpp9si0L0zbCKPFb5m98bpbFc0WxStUoMlD/XZgDjWj4AC8cHMmPXiNz6pZ7f7tXky+y6tUncHEURWRNaVffpX1gnM6eTWYMq3SiLyJ2E/6uu+RgrjklADPBdp6wUoX1jLKFqx2V77g9ysHhMnj7gIcDtC2vrHZJ1obYb6xJd/iODYe2rbnFCv0S6uaXZbM+FBIGvN8Qz92nnjA3XyxzWMVsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEArv7+3n+29cLxC3hnxwYWa4VO+VikD7TLACMLIxZECQMKSHYRq+n4l5+ZvZC+LWG/K8iPv/DDmy10kUOA6eERFTPNf8EgjoQtBqG9RdMqWB6h2M+kbFa7eyfufZran8Q1lUt6iy4l2RoyJbLnP8tn580YFa7VsNWJYP8AZcCQVIt/Qe6chd67X0q+vWJVycoxyoCIuCWR6mkKFCpt3CPvHx231uInly8oc2s6WxQnLuVL6eqsclH5kHS9JGLJzP5nZHOw5dRJJKv1qvcDdACsl9liTqmclPaGuCqjojqBtqwOqYPqlCyPWBEecULvwXEEhMrosSiTULulFZmO/4s0yA=="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "b4f9ed5c-e6ca-466f-9539-36384976633e",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "54d99be5-65e2-44a3-84de-813bbf554820"
            ],
            "secret": [
              "_kqy4S1dxT9cuowYR5RBow"
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "f6f91b88-096e-437f-84db-5cae0e9af239",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e8fbb3e2-6597-431b-97db-2044de841208",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fef3e952-8704-4d62-9a72-a606a4f96aa6",
        "alias": "Browser - Conditional Organization",
        "description": "Flow to determine if the organization identity-first login is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "organization",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "750ebb60-3d3d-470e-b4af-68ae866ae5b7",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "82479a47-3e74-46a2-993b-b572f47771c5",
        "alias": "First Broker Login - Conditional Organization",
        "description": "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "idp-add-organization-member",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d65fe8ad-f6f1-4da6-aee0-9503c64720dc",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b046b11d-7317-465f-806f-5f4b44662f3a",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "755b3ae0-36f7-4bd0-9df5-150425b898a9",
        "alias": "Organization",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c8b8b359-9d69-4710-b788-340e5ad13bfb",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a55cd486-21e3-4f6f-9775-a91b6490375c",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7d3556ca-328b-4f54-b26b-01d73acbb6c5",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2594aeeb-f734-43b4-94ad-1bf33d1c40c0",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 26,
            "autheticatorFlow": true,
            "flowAlias": "Organization",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "50fd4da5-109b-4a24-b2d6-73c10dbf23ac",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "04a1149a-9850-4274-b5dc-2a01e8495fe7",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b6744225-6b7e-4d6a-bf31-d4b713e41f3a",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5f307784-d881-44b3-98ac-23eca87f3cff",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 50,
            "autheticatorFlow": true,
            "flowAlias": "First Broker Login - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "76965c0e-81a5-4f43-8b2a-be6a0d2e5441",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "95885c33-89b6-4840-8a57-416a49bc4574",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "63f80df9-f993-4e77-805a-42efbb1d97e1",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f265503b-8fa2-4d10-ba6b-83e89ed1baa5",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "612c3a5d-6c3b-4b41-b3e1-8fa092109940",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "26506c21-2b28-4805-93b9-a2d6a488695e",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "71dd9f1b-46ea-4abc-8357-6967cb52f733",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.1.4",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "60d6844c-1c9c-4599-964f-19653a440342",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "carsties-auth-realm": [
                "view-clients",
                "manage-clients",
                "query-groups",
                "view-authorization",
                "create-client",
                "view-users",
                "query-users",
                "view-realm",
                "view-identity-providers",
                "view-events",
                "manage-identity-providers",
                "impersonation",
                "query-clients",
                "manage-users",
                "manage-realm",
                "manage-authorization",
                "manage-events",
                "query-realms"
              ],
              "master-realm": [
                "manage-identity-providers",
                "manage-realm",
                "view-identity-providers",
                "query-realms",
                "view-realm",
                "manage-users",
                "manage-events",
                "query-clients",
                "view-authorization",
                "view-events",
                "view-users",
                "query-groups",
                "manage-clients",
                "impersonation",
                "view-clients",
                "manage-authorization",
                "create-client",
                "query-users"
              ]
            }
          },
          "clientRole": false,
          "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
          "attributes": {}
        },
        {
          "id": "ac40b004-af92-4534-b195-5c7389ccf53f",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
          "attributes": {}
        },
        {
          "id": "ced12518-815c-48f0-a908-bdc59d0d59a8",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
          "attributes": {}
        },
        {
          "id": "a7557444-849b-4a8d-9277-6fa829cdde11",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
          "attributes": {}
        },
        {
          "id": "24168278-262c-4aee-bff0-1e00d3d865f9",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44",
          "attributes": {}
        }
      ],
      "client": {
        "carsties-auth-realm": [
          {
            "id": "48225d3a-9af0-4f4e-826b-9bd597b26330",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "carsties-auth-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "c58d288d-2875-4db5-82f6-732451a8237e",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "41b2fb08-e164-4ff5-851a-d7c335ed2be1",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "c8a94881-7f73-4b6a-9578-45a3cf10842d",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "e4ac5d37-ddda-4854-9f13-01d51822c81e",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "2eb7aa14-42ff-46c1-a44e-3b619fae1706",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "4496c8b1-ee63-4b6d-8c7c-92e858fa0fa5",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "6aa73c44-4f9d-4706-8dec-daf90d823af5",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "ac96df2d-1019-4bb8-8efc-6a89e735db14",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "carsties-auth-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "ea64c41d-f02e-46aa-b025-1238737f66bd",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "b003dbd3-09da-44f1-9f13-b79fd03a2c65",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "ea537247-4a5f-4c86-b922-1f5267fdea80",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "af8b6775-088e-4160-b472-b93869dc323a",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "008954f7-2278-4a1a-9d3b-e90b2eef2537",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "87b6fa56-2216-4e5d-91af-62db3690c026",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "b1ce1243-cc94-4a47-b697-c48472c905bd",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "8b134d09-053d-44de-991c-22433bb1fdc5",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          },
          {
            "id": "31a3756d-3c11-4807-bdac-0b7650a2156b",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "65542ddf-1597-4f00-a77c-1137af2a30df",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "37d6dfd2-8b92-430e-b921-bc5332831bd7",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "82fc25be-6b42-4a40-9780-a76e1dff8ad4",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "21529bd6-6164-4a20-b6a3-43e881277eb6",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "bfe7baa7-dd9e-41bb-ab5f-ebd9f67236fd",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "3f8369e9-1848-468f-996c-a59efbf89e30",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "3ff834ce-7950-4125-b86a-fd1c05aa7b82",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "e153724a-e3c4-43c1-b198-015df852bbf3",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "7ecb5853-cb4e-499a-bdd1-3f00dfe9c201",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "0c6f1ca6-6da0-4d92-b8b8-d9624c073e6f",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "51e9d1b7-8e6b-483e-8b76-a1d9a552620f",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "5ef6f724-fa6e-48a5-9641-b5b16d3cf6e7",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "600a2ccf-6507-412f-9b19-65659829ff98",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "d604d0cf-9201-41b7-9be0-e862e3f50467",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "f96e5221-12d5-4824-b9d7-884718f7a8dc",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "cd264d2c-06bb-43d7-b073-ef482d109e11",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "95722749-302a-4910-8fea-08cafd74e93e",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "1c6e00a6-bc03-47ad-9f15-ae2a476b89df",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "14a1b8b1-25b6-494a-8d8c-8ee73f68464a",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          },
          {
            "id": "b35b41d4-ff9a-45ab-809b-cc2332501749",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "11d48a0e-dd1c-4631-ab7d-156452e8de28",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "f5d30788-5fe6-47e3-9d52-13253875a2fc",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "62c56d52-bd12-470b-887f-5400759ed92d",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "d737a47b-97cb-4f9c-996a-abafcc9131c5",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "0ae7230c-b6b9-4371-ac12-4ff1fb8dcd2a",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "bcd2ac74-9fbf-4084-855f-04e29592c540",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "0f1b516a-54a6-4e62-8867-017845258889",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          },
          {
            "id": "3765216a-1ed8-49cc-9b6f-6acd2d71d15e",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "5f36444d-dfbd-47e3-9671-291720bd17a6",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "24168278-262c-4aee-bff0-1e00d3d865f9",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "f3f33a6e-66e2-4082-a78c-3aaa0b408d44"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "35fc57a1-611d-4cf6-a91c-1d69d13b49eb",
        "username": "admin",
        "emailVerified": false,
        "attributes": {
          "is_temporary_admin": [
            "true"
          ]
        },
        "createdTimestamp": 1742833687181,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "id": "18d88695-27f4-4a03-887e-67689374c351",
            "type": "password",
            "createdDate": 1742833687774,
            "secretData": "{\"value\":\"/fp9BLpnYQiTNQ85OarTlE1S0BRIDAggDUuSBV7Rzqs=\",\"salt\":\"5dzFqpBKntsh/Uzng25J0w==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "admin",
          "default-roles-master"
        ],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "5f36444d-dfbd-47e3-9671-291720bd17a6",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "066d991f-afac-428f-9b07-e24ae438885b",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "f9ed6535-5146-4a6b-ac83-6f01ffa35289",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f684c144-cc7a-42bb-ac40-64655c9e00bb",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "37d6dfd2-8b92-430e-b921-bc5332831bd7",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "20424e30-03d3-413c-bacc-1ba6bb58dd27",
        "clientId": "carsties-auth-realm",
        "name": "carsties-auth Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "8fe3014d-3ffa-45ad-8b37-b1dc35a24789",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "e0f0ec21-2f16-48c0-8b7e-4f4e275dec23",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "25e88275-84a0-42f6-90a9-fe63cb04eb57",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "e2d519de-c250-487d-84df-08e61a990039",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "533455e9-8c36-4013-8071-2c9df2a368f9",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "40377231-1690-491e-b897-578eafbff90e",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "9d485239-09b4-471e-9cdb-b4b3307eb7db",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "08d7639a-910c-4645-88e5-d242b8320c10",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          }
        ]
      },
      {
        "id": "497e764c-23ff-4403-bf4b-022487efd01b",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "de0c9c4a-e716-4da9-a552-ac3ccffaa0a9",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "d61433ea-0022-4663-8956-eb3a7130f5a9",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "67907896-c574-4000-b61e-4824d75491bd",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "74e1c385-cc01-4af6-9964-05240d189148",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cb510801-72a4-4a93-940f-6ee8e3990f31",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "878a4398-37fc-4f56-9835-956ebeb433b8",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f411dc5d-3bb7-42ce-bbdb-b81ccd1a5680",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "61fef7e8-97aa-4bc9-88e9-6d12604c0fd1",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ab8670df-404b-43b8-bd00-148fb6570a6c",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0b296343-6a93-4c09-9687-d4e8f4b3fae5",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "231dabe5-1360-4048-b258-815466d840cd",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "20b993e5-796f-48dd-92e6-50f19fa27edc",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "12ce22cb-45d6-4448-ad41-9082a989002a",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8aa3b08c-91c9-44e0-96c3-44798320f0b2",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "1775d5b1-9594-455f-af3d-590708321200",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ec5f11eb-5aa4-408e-8fbc-10418ef774bd",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d670ad64-bb70-4f21-b381-4d3cf525fe85",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "286dc81a-61dc-4f3b-9f35-561c61990d89",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "487b66a2-7a20-4e36-9dec-b2a79c95ac2f",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "91f21451-294c-40c6-9b50-3e4829bb4c31",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "d35446b5-a0d7-4d9d-82b1-de9fb4376236",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e6608ae2-cad8-4233-a30d-cb5bc323b1aa",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "388892bf-7f25-43b7-aa00-4210ca9e81f5",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "32ff9c31-5342-42d5-966d-8da86855839b",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fd24d4e4-2346-42be-9c37-77d0a72ac412",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2ca1d3ac-b046-46ec-9538-56d0f1352871",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "27a1c54f-f79e-4bb5-806a-387c9ade174f",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "50772413-1952-454b-9e86-a5837a44121d",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9b41a094-3d7d-478f-acc0-7ce5b5c801a9",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "18a2cc78-213c-47f3-b302-0934402bc6e2",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "9898133d-d829-4f21-8135-9b960634ad41",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "b7bd19e6-3368-4b5d-ad47-aa0b588079dc",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "05d6e558-981d-418e-8d93-edfe8dbeab8e",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "5b989a51-5388-45f7-9d82-0eb4735218d4",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "9c48d7d8-5a84-44ec-8419-26e539178a3b",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "73391053-6b32-489d-b07b-8b865552afa4",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1e816e95-8b09-4db6-bb4d-5faf1fbdae09",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "826895e9-3be2-4416-afca-be10fd324276",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "f6c2a0c2-2d75-46b5-b4b9-7f28143350b2",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "28d1e33b-eae2-4f7f-9582-0d173a871cda",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "7a0ab79c-26a1-45e6-8382-5f85746c2e38",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "a2e7fb23-0caf-4d3e-b75a-862f00b64149",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "749f6449-1ba7-416b-941c-00cfeb30d2bb",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "b8b57149-4ff9-4d48-967b-77bcaa16ae1b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "b350b820-a698-4baf-8d9e-dd1f55e3cf17",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "a478c11e-819e-4853-9d50-9194f8e57d8c",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "53e5fb62-d12a-4acf-92c4-ceaf7d97f1cb",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        },
        {
          "id": "5a24e599-b0a3-4468-abe0-68b5b61aec1b",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "4243af29-e93d-4aff-8b7b-b7dda23e9573",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        },
        {
          "id": "7a59ee8f-9753-46ec-9de5-b62edaf250e2",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "6a2442c5-6476-4d8e-9a38-c431c8d6ac8c",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {
            "kc.user.profile.config": [
              "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "cb3469c3-7fd5-4a23-a9d9-3878a379cce1",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "85057f64-c5c8-4bd5-a21e-012d63dc354b"
            ],
            "secret": [
              "jj1jOG_-onvDFs6wV3mFJg"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "5968fcd5-b769-4efd-9741-3401b488d948",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "b1e05a4f-7044-42bf-a15b-35a850cac9e5"
            ],
            "secret": [
              "MmCh7evYqViPq74hF-Gpu6-Vud2E3M6xaXybXgYD5HRIA_jr0ik-EAJnEB9g46f29bZTEprbp3XctYSVl0EVeFSnOVLISaYIUwGRA-7FP_3i7J5sWrne4SOFPL7WD0UwaxEPw9jFIlLR-k8fksWPz6YYtg6JNmnSX98F8ynd2HY"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "21d6a7e7-3c16-4bbc-aa05-5573523e21f3",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAofTSKOc0++KOs5boI8NIt4nfLkx/f+vicOPywaxfaRTAdsv3YjZscNrS6hyvyQ8RlRWW/j+k93AkoaAXbt8kiq3AHi6frj0Cg7f6y62bIzPuLXU20/jt8yQq71Q87FhBG+z7ZBctk7ZqjL8nfFVr+rjVpnWWihcOCPGPA1db2z1HQ7cjMrM79orc1YV+W8FPPrif56gKIbGqc/mQmULP0HnEbfrO+pFvWbHUwhw/qJHgpYy1VkQJDzDk9G5b4D4vSEq6swngS8a1rd2mSx+21uXkHuhji+lNz+vgE+epIiJyZ/8yKfSPh6xJNbRS8S4P1QZPOM7ojAVVrA/gQdZNJQIDAQABAoIBABVCvwwLk2hgTNIamg2H0gCgzXbrJ+8HwkmGQxSq/ONzNp43FxoCLFOBsR/L9ZpJVh+MyVjwdfGIUTwTzhUJ9LwXzxlR5Dh1XeJ4wShXzqkyZK6nAomVK3eNue0tJnTy/lPHf8Dwof+6z1tRWheiXHMk1zdA8dWIQplooe49sPCjcbJopPgF4mmUvvLMmunnDrviOEmpQjdIl6+gRSCyYjlHIEDa+dO4y4j8OnnDNSfFonl1C/bcS8pc1JVXmswk/Jx3i1AqhBB9+Pf6rNv6Ug4I1w3B5thFJW2bcPdCtlzf4AVHkIt+NVy82nqFnbiTXkXE1E90R/K2WpJ0NuwTkwkCgYEA38w2T9UxsVGikyped4Hvzv3PpoNcbCWmN/hd43/zfpnjd8jeI6C9oFbuabdxW8fV4g2MgHjpr0oCP8xxUVsHfL0OTBHR+BgfO5ZcLJ68yluKMBtbE+WwTGqDFDYoRy/gyeLEm6yKi2D4YHMpYp6Lu4LjtqDM0xuKXAso07fO4gcCgYEAuUKgceebiQiOIaaGGHOEtjj8h1S8kv+XY+BImFcT6rlfrnaOmCXBgEh/lzg0GNqZ2OPpluIlU3topBmFf16OpzuqBRB9oNEuTpwl+w1vV0ZyBwPcXVT4L6yFG195HEAcVmtVbtLUsglRPfrHUPHGpWG775JgaG3GBV40wBPiHHMCgYEAxwbKikbUMZijF3PHnUpuJUwtXi1WhUsaPo5fmRHSTxW2aHG3tEGgQjbtQhEE/BWFDcr019AwKlaMF4bOhAaLaxCK5XW3oIZ7SDfY80mcJe4wv8WkQtay6dKTjeb3/Q8EPyavqK5Sa8+qM8RW2sCbDgBCWMk6PsgwTNkTzu2ZTAMCgYAQ15PKhynGrXZubLsoIehgwJGEpBl4q6/RrqQq5U+0OSIPtEuGXXhX9z9SOhPSZp0x8JZd1zVZf5ClyoQubiQ949izGSqyohG5p8x0JGaI4qifJqSz/3OIsgBv2qAiB1oMKTndF2GqxdoS7meMXk6W3mm9f+sv0zr7ZfMZuzUFLQKBgQCI4JnTPOJRpnbpHT2raqQ6jfjTCCwyY8x4u0Z0iqoR3QKiEjmv5jpPjOOtLHpkyZR5/wy6nHkR/p1G8+RerLbxG+Cs4KSHicnoSKn6EcT3E1zzPCRRH2wMdUYIs3BIL1pVhjmubmlQm4t3m9IX+dKJXFBSF5lrVEC8G3+B/9/SKg=="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGVyPuZbTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwMzI0MTYyNjI2WhcNMzUwMzI0MTYyODA2WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCh9NIo5zT74o6zlugjw0i3id8uTH9/6+Jw4/LBrF9pFMB2y/diNmxw2tLqHK/JDxGVFZb+P6T3cCShoBdu3ySKrcAeLp+uPQKDt/rLrZsjM+4tdTbT+O3zJCrvVDzsWEEb7PtkFy2TtmqMvyd8VWv6uNWmdZaKFw4I8Y8DV1vbPUdDtyMyszv2itzVhX5bwU8+uJ/nqAohsapz+ZCZQs/QecRt+s76kW9ZsdTCHD+okeCljLVWRAkPMOT0blvgPi9ISrqzCeBLxrWt3aZLH7bW5eQe6GOL6U3P6+AT56kiInJn/zIp9I+HrEk1tFLxLg/VBk84zuiMBVWsD+BB1k0lAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHB+zSeFkMLSXFExFS89/mBmY4sTOP3b7GrppomYRvi37ePrPlFBzqIAy8pd0lEISQUzib0eGCBMVZrR8rdiXcXgOna1vZ0JfTlorK53VyuDMTzsVBMcOd/eUGqqrF7E4lpOmbrg3OIjce1ntHETmovVHpUttssqWyRcqeEwvRGLYJ+x1jH9gmUVk+y5KtoOIRS7tWKqt1iZSmR4QkL0WJXo8HUHN2HoZqvtIC4dWRpIXYDlLUosaPQ9J2vwIihVPZ3tv+9L/DrKSoHHcb3Kdnm6TM37ZYsdoyn1EFYIDpnOzLqVgwHQEW/KHAkJO/11L1tCI/NgQy1TDvklr/96I8g="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "c6815ce1-5e98-44b4-8e42-f2626f15d199",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAyPg4T+W3ZS+OL1oCs3PFCxr0gpyfnN4FzjK4ZF6Q7IFybsoHX0lz0QwcNpZZY3loFTjYYgZzOVA1WCow671TF5MuPr6NjSlMpr/NmWiVr64tnXxaOGQ1/JkVeZ5mPCpphjOW7Z7xFqRLdkjZGUC5IhuZv8U9HW/haburhDTlXKmFpr3iOB6FGKloV5GTYIu6Gbo7oLBBO92CphyoMd0yk2aJhKXc+wFB8IQ5IlAuJkqYsvxOjv5h9NO51fRId+jl8WDv64zHi9/mVpFnPEeJQLyxe2dG972MkGgeywmSPajLP+FMPWEhw1W+TDVWkODP1ZzHpV6aVTNDU1Nd9frlRQIDAQABAoIBAA9vn1WlsYksVqm06m2xp/ITKzIoCQtxszT0CN0utUdxJuKzEk9jkyl8mmMn96wwDEpLADXBRJLjogFIVlMZCtuN8rifhrxProNFSquskIi6ombNARoBOnNRJ8jcXYJkCJBmAIL2WRKx4ljuvfwWUFH6GDxWUDwlVoU6RLGGJZLREIAIckAGAf2f60xkZCFstn2KBjvs4DqZc9UAVW5aW7SKq9BWOTWMjjv1z1FIHTVn6y0eqUJmE+oBiT3soUK9ifaPR/7iFto8kTNxQ9tqYLLP+CPGP4b/l63BYH+39U64O1SrZDrl04lU188cHEmOjO9EQTfobReCiHdLZstrjlkCgYEA+hojHpLSwTNY8T9PB5ovRkD6FCj/ahWkr8Ne0aQX2n14u+ifmQaj9BbvHhChnRbX43dE/eKiqU2/nXjCHTqwk5UcPkxTeq7HlIybn0VWQDjfPLTU8tsN+Mu8Nh73IzJe2l3BGhqQ1LSSun0jaYO6eZc7pc0ijZXoHOv6HYp4/20CgYEAzbV4fDGLsP7pnIWuZjN7cPkiA5c3YwGsFM+i7PWbB0EGB/EUl4yT72vBT8CBXkQkUiMSURB6XzrE3QlnQP/sJAZiZC8rYQMDRJqTePmWfM5P6WCy1gnWW/Kxqw3sKaqe9UZT3xJ/nsN//cWj49Z5bKsGcVaRaa2tlZxV2jhAXjkCgYAGngZr2qqk3fzudSRcKSIzE6kKO4N2hRgUZnDtzw+qgkNdhWwjml9gJ/MvsnT0ORSBOjijFwoCvMHjIrzQFSty3DEhHNfgmRtCvO2pKyZ7EIYnjwlLW6xk9s8GB4+2aLDFylE/pZBLcHOpZ4I2Wnvml6/GVUUixeKcUUoO2gkViQKBgEJlPVNQppblYD+uAkFogoJPV0QzbaQeKQ26iwrSp0wrF6g+jvfvXtxbOlTkfJ0Rf2uneEUD/Yt5K4tweoxHTk++Y8mUU/sG/uoIvmrAnGsCKFbaaD6fhDm/VsswPjagpJfkMDQDA4AZ99jQDvr+AckqVnUEjQDAFxQAFtHNcDE5AoGBAPPtd+LzXK4bPYFxvu+zWgJ+WxbQu36C/96pYdxMByT+59Uhjp8+ND4oLMiuFwRfqKHA8u3r5q3PZjkBFT0Gy0pi0VMRHbNW4f1cDSW7QTCMjkq2AFnyQJ0Lu10Hp5/ogG/ffWio9b2KP+j4A5Gjp5WqTOFhGpTL4NZshgXypumL"
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGVyPuYLDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwMzI0MTYyNjI2WhcNMzUwMzI0MTYyODA2WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI+DhP5bdlL44vWgKzc8ULGvSCnJ+c3gXOMrhkXpDsgXJuygdfSXPRDBw2llljeWgVONhiBnM5UDVYKjDrvVMXky4+vo2NKUymv82ZaJWvri2dfFo4ZDX8mRV5nmY8KmmGM5btnvEWpEt2SNkZQLkiG5m/xT0db+Fpu6uENOVcqYWmveI4HoUYqWhXkZNgi7oZujugsEE73YKmHKgx3TKTZomEpdz7AUHwhDkiUC4mSpiy/E6O/mH007nV9Eh36OXxYO/rjMeL3+ZWkWc8R4lAvLF7Z0b3vYyQaB7LCZI9qMs/4Uw9YSHDVb5MNVaQ4M/VnMelXppVM0NTU131+uVFAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAD/5dRIbABNLq5337cUNB2uxZzxzFBuqnuCDRhKCBKSFwCtFqCG0n8MXXU9e3nEvI0QhmubxK6wJq1WTHvWqhTYHrX7SmXYrYOeFRCE5LcuAKzRxVdqdcuhoQiK/iwhvL5Y9aTFfP7yT33PMrleXFrIPlICbhvloakzpZaaQHPVWAyOhYvsf0T8/iPSkqe+5fSdb1ugdWItgQDO/74PV1p6Rz8vWrNz+yZi+RaNELJ3ROHtBKU5evsFPW4NZbAMX3wtxPeNZsu+tUOJTrjyf9BkGnhFMaSw4njMcur5LiKAL71oFy/uUIPeTMcON9iCyWQbPhBpSV+DfZppZ8BJ8Xsc="
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "4b6ad26a-c224-48a2-a36c-42e2acb11914",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c7c02583-cb67-4cc0-8484-6ab0d0018261",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2d5fc591-812b-4df6-94bf-c5772db32df6",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "965fe683-5388-43a2-b5aa-b25d95f99492",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2e9de97d-1302-4f2f-92f7-582de855f811",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6738d168-4732-4ef4-afb1-22e14d22772a",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "41a3d6df-4a99-4c18-a11f-7904e9be205b",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "892b4b3e-0c15-44d0-b7e5-72af754f1008",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8197a32f-d9fb-4566-9dc2-06419aaeee3a",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "63849dc3-8f76-4940-83e3-8ffd31d9b491",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "81f6fafe-8e21-4497-8f59-3b2f95d18b2e",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "cf986665-3bbf-4c72-aa69-a86f09452cbc",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1609ecc1-6579-4fe7-8a16-2c1661a62dcd",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ac95e7f9-7927-4cfe-addd-078730fab64c",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "80047196-7fdb-48a6-9b9b-911dcff26733",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "23eaca0b-6e52-4a9a-92a1-2c2f0584d6a4",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8e10f46d-950a-4bf2-824f-414fdab3c1dd",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4fd9e5f9-883b-4fb4-bfcb-81db8b3519c7",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "06717f11-9da5-4cfa-9d99-8ab4dbd3dee1",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "c2b6aa22-78e2-4f42-ba32-c91e7442652f",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.1.4",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]